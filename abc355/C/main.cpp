#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
using namespace std;

#define REP(i, n) for (int i = 0, i##_len = (n); i < i##_len; ++i)
#define FOR(i, a, b) for (int i = (a), i##_len = (b); i <= i##_len; ++i)
#define REV(i, a, b) for (int i = (a); i >= (b); --i)
#define CLR(a, b) memset((a), (b), sizeof(a))
#define DUMP(x) cout << #x << " = " << (x) << endl;
#define INF 1001001001001001001ll
#define fcout cout << fixed << setprecision(12)

using ll = long long;
using vi = vector<int>;
using vl = vector<long long>;
using vs = vector<string>;
using vc = vector<char>;
using vb = vector<bool>;
using vpii = vector<pair<int, int>>;
using vpll = vector<pair<long long, long long>>;
using vvi = vector<vector<int>>;
using vvl = vector<vector<long long>>;
using vvc = vector<vector<char>>;
using vvb = vector<vector<bool>>;
using vvvi = vector<vector<vector<int>>>;
using pii = pair<int, int>;

template <typename T>
inline bool chmax(T &a, T b) {
    return ((a < b) ? (a = b, true) : (false));
}
template <typename T>
inline bool chmin(T &a, T b) {
    return ((a > b) ? (a = b, true) : (false));
}


void solve(long long N, long long T, std::vector<long long> A){

    vector<long long> c(N);
    vector<long long> d(N);
    vector<long long> e(2);

    

    for(long long i=0; i<T; i++){
        long long x = (A[i]-1)%N;
        long long y = (A[i]-1)/N;

        //縦の列の判定
        c[x] += 1;
        
        //横の列の判定
        d[y] += 1;

        //対角線の判定
        if(x==y){
            e[0] += 1;
        };

        if(x+y == N-1){
            e[1] += 1;
        };

        if(c[x] == N || d[y] == N || e[0] == N || e[1] == N ){
            cout << i+1 << endl;
            return;
        };
    };
    cout << -1 << endl;
    return;
}

// Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main() {
    long long N;
    if (std::scanf("%lld", &N) != 1) {
        // エラー処理: Nの読み取りに失敗した場合
        std::cerr << "Error: Failed to read N" << std::endl;
        return 1; // エラーコード1を返す
    }

    long long T;
    if (std::scanf("%lld", &T) != 1) {
        // エラー処理: Tの読み取りに失敗した場合
        std::cerr << "Error: Failed to read T" << std::endl;
        return 1; // エラーコード1を返す
    }

    std::vector<long long> A(T);
    for(int i = 0 ; i < T ; i++){
        if (std::scanf("%lld", &A[i]) != 1) {
            // エラー処理: A[i]の読み取りに失敗した場合
            std::cerr << "Error: Failed to read A[" << i << "]" << std::endl;
            return 1; // エラーコード1を返す
        }
    }

    // ここで正常な処理を続行する
    solve(N, T, std::move(A));
    return 0;
}
