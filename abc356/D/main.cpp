#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
using namespace std;

#define REP(i, n) for (int i = 0, i##_len = (n); i < i##_len; ++i)
#define FOR(i, a, b) for (int i = (a), i##_len = (b); i <= i##_len; ++i)
#define REV(i, a, b) for (int i = (a); i >= (b); --i)
#define CLR(a, b) memset((a), (b), sizeof(a))
#define DUMP(x) cout << #x << " = " << (x) << endl;
#define INF 1001001001001001001ll
#define fcout cout << fixed << setprecision(12)

using ll = long long;
using vi = vector<int>;
using vl = vector<long long>;
using vs = vector<string>;
using vc = vector<char>;
using vb = vector<bool>;
using vpii = vector<pair<int, int>>;
using vpll = vector<pair<long long, long long>>;
using vvi = vector<vector<int>>;
using vvl = vector<vector<long long>>;
using vvc = vector<vector<char>>;
using vvb = vector<vector<bool>>;
using vvvi = vector<vector<vector<int>>>;
using pii = pair<int, int>;

template <typename T>
inline bool chmax(T &a, T b) {
    return ((a < b) ? (a = b, true) : (false));
}
template <typename T>
inline bool chmin(T &a, T b) {
    return ((a > b) ? (a = b, true) : (false));
}

const long long MOD = 998244353;

long long popcount(long long m){

    long long a = m;
    long long count = 0;

    for(int i=60; i>=0; i--){
        if(a>=(1ll<<i)){
            a-=(1ll<<i);
            count+=1;
        }
    }
    return count;
}

long long f(long long n, long long m){
    if(n==1){
        // cout<<"1&m="<<(1ll&m)<<endl;
        return 1&m;
    }else if(n==0){
        return 0;
    }else{
        for(long long i=1; i<=60; i++){
            if(n>=(1ll<<i)&&n<(1ll<<(i+1))){
                // cout<<"i="<<i<<endl;
                // cout<<"n="<<n<<endl;
                // cout<<"popcount(m&((1ll<<i)-1))="<<popcount(m&((1ll<<i)-1))<<endl;
                // cout<<"popcount(m&((1ll<<i)-1))*(1ll<<(i-1))="<<popcount(m&((1ll<<i)-1))*(1ll<<(i-1))<<endl;
                // cout<<"(n-(1ll<<i)+1)="<<(n-(1ll<<i)+1)<<endl;
                if((1ll<<(i))&m){
                    return popcount(m&((1ll<<i)-1))*(1ll<<(i-1))+(f(n-(1ll<<(i)),m))+(n-(1ll<<(i))+1);
                }else{
                    return popcount(m&((1ll<<i)-1))*(1ll<<(i-1))+(f(n-(1ll<<(i)),m));
                }
            }
        }
    }
};



void solve(long long N, long long M){

    long long S=f(N,M);
    cout << S%MOD << endl;

}



// Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
        long long N;
    std::scanf("%lld", &N);
    long long M;
    std::scanf("%lld", &M);
        solve(N, M);
        return 0;
}
