#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
using namespace std;

#define REP(i, n) for (int i = 0, i##_len = (n); i < i##_len; ++i)
#define FOR(i, a, b) for (int i = (a), i##_len = (b); i <= i##_len; ++i)
#define REV(i, a, b) for (int i = (a); i >= (b); --i)
#define CLR(a, b) memset((a), (b), sizeof(a))
#define DUMP(x) cout << #x << " = " << (x) << endl;
#define INF 1001001001001001001ll
#define fcout cout << fixed << setprecision(12)

using ll = long long;
using vi = vector<int>;
using vl = vector<long long>;
using vs = vector<string>;
using vc = vector<char>;
using vb = vector<bool>;
using vpii = vector<pair<int, int>>;
using vpll = vector<pair<long long, long long>>;
using vvi = vector<vector<int>>;
using vvl = vector<vector<long long>>;
using vvc = vector<vector<char>>;
using vvb = vector<vector<bool>>;
using vvvi = vector<vector<vector<int>>>;
using pii = pair<int, int>;

template <typename T>
inline bool chmax(T &a, T b) {
    return ((a < b) ? (a = b, true) : (false));
}
template <typename T>
inline bool chmin(T &a, T b) {
    return ((a > b) ? (a = b, true) : (false));
}

long long p (long long n){
    long long a =1;
    if(n>0){
        for(long long i=0;i<n;i++){
            a *= 3;
        }
    }
    return a;
}

vector<vector<string>> f(long long N){
    vector<vector<vector<string>>> aa(6,vector<vector<string>>(p(N),vector<string>(p(N),".")));

    for(int k=0;k<=N;k++){
        vector<vector<string>> a(p(k),vector<string>(p(k),"."));
        for(int i=0;i<p(k); i++){
            for(int j=0;j<p(k); j++){
                if(k>=2){
                    if(i>=(p(k-1))&&i<(2*(p(k-1)))){
                        if(j>=(p(k-1))&&j<(2*(p(k-1)))){
                            a[i][j] = ".";
                        }else{
                            a[i][j] = aa[k-1][i%(p(k-1))][j%(p(k-1))];
                        }
                    }else{
                        a[i][j] = aa[k-1][i%(p(k-1))][j%(p(k-1))];
                    }
                }else if(k==1){
                    if(i==1&&j==1){
                        a[i][j] = ".";
                    }else{
                        a[i][j] = "#";
                    }
                }
            }
        }
        aa[k] = a;
    }
    return aa[N];
}

void solve(long long N){
    vector<vector<string>> a(p(N),vector<string>(p(N),"."));
    a= f(N);
    for(long long i=0;i<p(N); i++){
        for(long long j=0;j<p(N); j++){
            cout << a[i][j];
        }
        cout << endl;
    }
}

// Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
        long long N;
    std::scanf("%lld", &N);
        solve(N);
        return 0;
}
