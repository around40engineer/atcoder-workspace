#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
using namespace std;

#define REP(i, n) for (int i = 0, i##_len = (n); i < i##_len; ++i)
#define FOR(i, a, b) for (int i = (a), i##_len = (b); i <= i##_len; ++i)
#define REV(i, a, b) for (int i = (a); i >= (b); --i)
#define CLR(a, b) memset((a), (b), sizeof(a))
#define DUMP(x) cout << #x << " = " << (x) << endl;
#define INF 1001001001001001001ll
#define fcout cout << fixed << setprecision(12)

using ll = long long;
using vi = vector<int>;
using vl = vector<long long>;
using vs = vector<string>;
using vc = vector<char>;
using vb = vector<bool>;
using vpii = vector<pair<int, int>>;
using vpll = vector<pair<long long, long long>>;
using vvi = vector<vector<int>>;
using vvl = vector<vector<long long>>;
using vvc = vector<vector<char>>;
using vvb = vector<vector<bool>>;
using vvvi = vector<vector<vector<int>>>;
using pii = pair<int, int>;

template <typename T>
inline bool chmax(T &a, T b) {
    return ((a < b) ? (a = b, true) : (false));
}
template <typename T>
inline bool chmin(T &a, T b) {
    return ((a > b) ? (a = b, true) : (false));
}

const string YES = "Yes";
const string NO = "No";

void solve(long long a, long long b, long long c, long long d, long long e, long long f, long long g, long long h, long long i, long long j, long long k, long long l){
    if(d>g && j>a){
        if(e>h && k>b){
            if(f>i && l>c){
                cout << YES << endl;
                return;
            }
        }
    }
    cout << NO << endl;
}

// Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
        long long a;
        cin >> a;
    long long b;
    cin >> b;
    long long c;
    cin >> c;
    long long d;
    cin >> d;
    long long e;
    cin >> e;
    long long f;
    cin >> f;
    long long g;
    cin >> g;
    long long h;
    cin >> h;
    long long i;
    cin >> i;
    long long j;
    cin >> j;
    long long k;
    cin >> k;
    long long l;
    cin >> l;
        solve(a, b, c, d, e, f, g, h, i, j, k, l);
        return 0;
}
