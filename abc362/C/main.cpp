#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
using namespace std;

#define REP(i, n) for (int i = 0, i##_len = (n); i < i##_len; ++i)
#define FOR(i, a, b) for (int i = (a), i##_len = (b); i <= i##_len; ++i)
#define REV(i, a, b) for (int i = (a); i >= (b); --i)
#define CLR(a, b) memset((a), (b), sizeof(a))
#define DUMP(x) cout << #x << " = " << (x) << endl;
#define INF 1001001001001001001ll
#define fcout cout << fixed << setprecision(12)

using ll = long long;
using vi = vector<int>;
using vl = vector<long long>;
using vs = vector<string>;
using vc = vector<char>;
using vb = vector<bool>;
using vpii = vector<pair<int, int>>;
using vpll = vector<pair<long long, long long>>;
using vvi = vector<vector<int>>;
using vvl = vector<vector<long long>>;
using vvc = vector<vector<char>>;
using vvb = vector<vector<bool>>;
using vvvi = vector<vector<vector<int>>>;
using pii = pair<int, int>;

template <typename T>
inline bool chmax(T &a, T b) {
    return ((a < b) ? (a = b, true) : (false));
}
template <typename T>
inline bool chmin(T &a, T b) {
    return ((a > b) ? (a = b, true) : (false));
}

const string YES = "Yes";
const string NO = "No";

void solve(long long N, vector<long long> L, vector<long long> R){
    long long sumL = 0;
    long long sumR = 0;
    long long sum = 0;
    vector<long long> x(N);
    
    for (long long i=0; i<N; i++){
        sumL += L[i];
        sumR += R[i];
        x[i] = L[i];
    }

    sum = sumL;

    vector<long long> A(N);

    if(sumL==0){
        cout << YES << endl;
        for (long long i=0; i<N-1; i++){
            cout << L[i] << " ";
        }
        cout << L[N-1] << endl;
    }else if(sumR==0){
        cout << YES << endl;
        for (long long i=0; i<N-1; i++){
            cout << R[i] << " ";
        }
        cout << R[N-1] << endl;
    }else if(sumL < 0 && sumR > 0){
        cout << YES << endl;
        for(long long i=0; i<N; i++){
            if(sum+(R[i]-L[i])<=0){
                x[i] = R[i];
                sum += R[i]-L[i];
            }else{
                x[i] = L[i]-sum;
                sum = 0;
            }
        } 
        for(long long i=0; i<N-1; i++){
            cout << x[i] << " ";
        }
        cout << x[N-1] << endl;
    }else{
        cout << NO << endl;
    }
}

// Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
        long long N;
    cin >> N;
    vector<long long> L(N);
    vector<long long> R(N);
    for(int i = 0 ; i < N ; i++){
        cin >> L[i];
        cin >> R[i];
    }
        solve(N, L, R);
        return 0;
}
