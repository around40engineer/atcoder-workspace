#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
using namespace std;

#define REP(i, n) for (int i = 0, i##_len = (n); i < i##_len; ++i)
#define FOR(i, a, b) for (int i = (a), i##_len = (b); i <= i##_len; ++i)
#define REV(i, a, b) for (int i = (a); i >= (b); --i)
#define CLR(a, b) memset((a), (b), sizeof(a))
#define DUMP(x) cout << #x << " = " << (x) << endl;
#define INF 1001001001001001001ll
#define fcout cout << fixed << setprecision(12)

template <typename T>
inline bool chmax(T &a, T b) {
    return ((a < b) ? (a = b, true) : (false));
}
template <typename T>
inline bool chmin(T &a, T b) {
    return ((a > b) ? (a = b, true) : (false));
}



// Generated by 2.14.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
        // Failed to predict input format
        int A;
        int B;
        cin >> A >> B;
        if(A>=B){
            if(A-B>=2){
//                if(2*B-A>=0){
//                    cout << 3 << endl;
//                }else{
//                    cout << 2 << endl;
//                }
                if((A-B)% 2==0){
                    cout << 3 << endl;
                }else{
                    cout << 2 << endl;
                }
            }else if(A-B==1){
//                if(B>=1){
//                    cout << 2 << endl;
//                }else{
//                    cout << 1 << endl;
//                }
                cout << 2 << endl;
            }else{
                cout << 1 << endl;
            }
        }else{
            if(B-A>=2){
                if((A-B)% 2==0){
                    cout << 3 << endl;
                }else{
                    cout << 2 << endl;
                }
            }else{
//                if(A>=1){
//                    cout << 2 << endl;
//                }else{
//                    cout << 1 << endl;
//                }
                cout << 2 << endl;
            }
        }
        return 0;
}
